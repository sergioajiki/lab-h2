<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.projetos.labH2.labDAO.PessoaDao">

    <resultMap id="PessoaResultMap" type="PessoaVo">
        <id property="id" column="id"/>
        <result property="nome" column="nome"/>
        <result property="idade" column="idade"/>
        <result property="email" column="email"/>
        <result property="data_nascimento" column="data_nascimento"/>
        <association property="endereco" javaType="EnderecoVo">
            <id property="id" column="id_endereco>"/>
            <result property="id" column="id_endereco"/>
            <result property="logradouro" column="logradouro"/>
            <result property="numero" column="numero"/>
            <result property="complemento" column="complemento"/>
            <result property="bairro" column="bairro"/>
            <result property="cep" column="cep"/>
            <result property="cidade" column="cidade"/>
            <result property="estado" column="estado"/>
        </association>
    </resultMap>

    <!-- Mapeamento para o método insertPessoa -->
    <insert id="insertPessoa" parameterType="PessoaVo">
        INSERT INTO h2dev.pessoa (nome, idade, email, data_nascimento, id_endereco)
        VALUES (#{nome}, #{idade}, #{email}, #{data_nascimento}, #{endereco.id})
    </insert>

    <!-- Mapeamento para o método getAllPessoas -->
    <select id="getAllPessoas" resultType="PessoaVo">
        SELECT id, nome, idade, email, data_nascimento
        FROM h2dev.pessoa
    </select>

    <!-- Mapeamento para o método getPessoaById -->
    <!--    <select id="getPessoaById" parameterType="Long" resultType="PessoaVo">-->
    <!--        SELECT id, nome, idade, email, data_nascimento-->
    <!--        FROM h2dev.pessoa-->
    <!--        WHERE id= #{id}-->
    <!--    </select>-->
    <select id="getPessoaById" parameterType="Long" resultMap="PessoaResultMap">
        SELECT p.id, p.nome, p.idade, p.email, p.data_nascimento,
               e.id as id_endereco, e.logradouro, e.numero, e.complemento, e.bairro, e.cep, e.cidade, e.estado
        FROM h2dev.pessoa p
        LEFT JOIN endereco e ON p.id_endereco = e.id
        WHERE p.id= #{id}
    </select>

    <!-- Mapeamento para o método getPessoaByNome -->
    <select id="getPessoaByNome" parameterType="string" resultType="PessoaVo">
        SELECT id, nome, idade, email, data_nascimento
        FROM h2dev.pessoa
        WHERE nome LIKE CONCAT('%', #{nome}, '%') -- Busca por nome usando LIKE %name%
    </select>

    <!-- Mapeamento para o método getPessoaByDataNascimentoRange -->
    <select id="getPessoaByDataNascimentoRange" resultType="PessoaVo">
        SELECT id, nome, idade, email, data_nascimento
        FROM h2dev.pessoa
        WHERE data_nascimento BETWEEN #{dataInicio} AND #{dataFim}
    </select>

    <!-- Mapeamento para o método updatePessoaById -->
    <update id="updatePessoaById" parameterType="PessoaVo">
        UPDATE h2dev.pessoa
        SET nome = #{nome}, idade = #{idade}, email = #{email}, data_nascimento = #{data_nascimento}
        WHERE id = #{id}
    </update>

    <!-- Mapeamento para o método deletePessoaById -->
    <delete id="deletePessoaById" parameterType="Long">
        DELETE FROM h2dev.pessoa
        WHERE id = #{id}
    </delete>

</mapper>
